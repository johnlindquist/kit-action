name: "Script Kit Action"
description: "Uses @johnlindquist/kit to run a script"
author: "John Lindquist"
inputs:
  script:
    required: true
    description: "name of a script in your ./scripts dir"
  args:
    required: false
    description: "args to pass to the script"
outputs:
  result:
    description: "result of the script args"
    value: ${{ steps.script-kit.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v4

    - uses: actions/checkout@v3 # Checkout this project (including ./scripts dir)

    - name: Add node and ./kit/bin to PATH
      run: |
        echo "$HOME/.kit/node/bin" >> $GITHUB_PATH
      shell: bash

    - name: Script Kit running ${{ inputs.script }}
      id: script-kit
      run: |
        kit_dir="$HOME/.kit"
        node_dir="$HOME/.knode"


        kit_node="$node_dir/bin/node"
        kit_npm="$node_dir/bin/npm"

        export KIT_NODE="$kit_node"        
        export KIT="$kit_dir/node_modules/@johnlindquist/kit"  

        mkdir -p $node_dir
        mkdir -p $kit_dir

        [ ! -d "$node_dir/bin" ] && curl -sfLS https://install-node.vercel.app/v16.14.2 | bash -s -- -f --prefix $node_dir
        $kit_npm i --prefix $kit_dir @johnlindquist/kit
        $kit_npm i --prefix $kit_dir @actions/github

        # echo $PATH
        $kit_node --version

        # find . | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/" 

        export KENV="$HOME/work/${{ env.GITHUB_REPOSITORY_NAME_PART }}/${{ env.GITHUB_REPOSITORY_NAME_PART }}"
        cd $KENV
        $kit_npm init -y
        $kit_npm i -D @johnlindquist/kit
        mkdir -p "$KENV/node_modules"


        # find $project_dir | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/" 
        export KIT_NODE_PATH="$HOME/.kit/node/bin"        
        echo "🏃‍♀️ Running ${{ inputs.script}} with ${{ inputs.args }}"
        result=$($KIT/bin/k "${{ inputs.script }}" "${{ inputs.args }}" --trust | tr '\n' ' ')
        [[ $result = *Error* ]] && exit 1

        echo $result
        echo "result=$result" >> $GITHUB_OUTPUT
      shell: bash

    - name: Check Result for Error
      if: ${{ steps.test-get.outputs.result }} = *Error*
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('${{ steps.test-get.outputs.result }}')

#     - name: Setup tmate session
#       uses: mxschmitt/action-tmate@v3
