name: "Script Kit Action"
description: "Uses @johnlindquist/kit to run a script"
author: "John Lindquist"
inputs:
  script:
    required: true
    description: "name of a script in your ./scripts dir"
  args:
    required: false
    description: "args to pass to the script"

outputs:
  result:
    description: "result of the script args"
    value: ${{ steps.script-kit.outputs.result }}

runs:
  using: "composite"
  steps:
    # Check if the directory exists
    - name: Check if repo is already cloned
      id: check_repo
      run: |
        if [ -d "$GITHUB_WORKSPACE/.git" ]; then
          echo "::set-output name=repo_exists::true"
        else
          echo "::set-output name=repo_exists::false"
        fi
      shell: bash

    # If the repo doesn't exist, clone it
    - name: Clone repo
      if: steps.check_repo.outputs.repo_exists == 'false'
      uses: actions/checkout@v3
      with:
        clean: false

    - uses: actions/setup-node@v3
      with:
        node-version: 18.15.0

    - name: Script Kit running ${{ inputs.script }}
      id: script-kit
      run: |

        kit_dir="$HOME/.kit"
        kit_node=$(which node | xargs dirname | xargs dirname)
        kit_npm=$(which npm | xargs dirname)

        # Add npm to PATH
        export PATH="$PATH:$kit_npm"

        export KNODE="$kit_node"        
        export KIT="$kit_dir/node_modules/@johnlindquist/kit"  

        echo "KNODE: $KNODE"
        echo "KIT: $KIT"

        mkdir -p $kit_dir     

        echo "Installing @johnlindquist/kit to $kit_dir"
        npm i -D --prefix $kit_dir @johnlindquist/kit

        # cat the $kit_dir package.json
        cat $kit_dir/package.json

        node --version

        export KENV="$GITHUB_WORKSPACE"

        # Write KENV to the env file
        echo "KENV=$KENV" >> $GITHUB_ENV
        echo "KIT=$KIT" >> $GITHUB_ENV
        echo "KNODE=$KNODE" >> $GITHUB_ENV  

        export KENV_PREFIX=$KENV/scripts

        # If $KENV/package.json doesn't exist, create it
        if [ ! -f "$KENV/package.json" ]; then
          echo "Creating $KENV/package.json"
          cd $KENV && npm init es6 -y
        fi

        # If $KENV_PREFIX pacakge.json doesn't exist, create it
        if [ ! -f "$KENV_PREFIX/package.json" ]; then
          echo "Creating $KENV_PREFIX/package.json"
          cd $KENV_PREFIX && npm init es6 -y
        fi        

        echo "Linking kit dir $KIT to $KENV_PREFIX"
        npm i -D $KIT --prefix $KENV_PREFIX

        echo "Installing @actions/github to $KENV_PREFIX"
        npm i -D @actions/github --prefix $KENV_PREFIX

        echo "Installing @actions/core to $KENV_PREFIX"
        npm i -D @actions/core --prefix $KENV_PREFIX     

        echo "🏃‍♀️ Running: ${{ inputs.script }} ${{ inputs.args }}"

        # If SCRIPTS_DIR is not set, set it to scripts
        if [ -z "$SCRIPTS_DIR" ]; then
          export SCRIPTS_DIR=scripts
          echo "SCRIPTS_DIR=$SCRIPTS_DIR" >> $GITHUB_ENV
        fi

        cd $KENV

        # Echo RUNNER_OS and system details
        echo "RUNNER_OS: $RUNNER_OS"

        if [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "Running $KNODE/x64/node.exe $KIT/run/github-workflow.js ${{ inputs.script }} ${{ inputs.args }} --trust"
          $KNODE/x64/node.exe $KIT/run/github-workflow.js ${{ inputs.script }} ${{ inputs.args }} --trust
        else
          echo "Running $KNODE/bin/node $KIT/run/github-workflow.js ${{ inputs.script }} ${{ inputs.args }} --trust"
          $KNODE/bin/node $KIT/run/github-workflow.js ${{ inputs.script }} ${{ inputs.args }} --trust
        fi

        if [ $? -ne 0 ]; then
          echo "${{ inputs.script }} failed"
          exit 1
        fi
      shell: bash
