name: "Script Kit Action"
description: "Uses @johnlindquist/kit to run a script"
author: "John Lindquist"
inputs:
  script:
    required: true
    description: "name of a script in your ./scripts dir"
  args:
    required: false
    description: "args to pass to the script"

outputs:
  result:
    description: "result of the script args"
    value: ${{ steps.script-kit.outputs.result }}

runs:
  using: "composite"
  steps:
    # If the repo doesn't exist, clone it
    # - name: Clone repo
    #   uses: actions/checkout@v3
    #   with:
    #     clean: false

    # If the repo doesn't exist, clone it with git

    - name: Conditional clone
      run: |
        # If the GITHUB_WORKSPACE doesn't have a .git dir, then clone it
        if [ ! -d "$GITHUB_WORKSPACE/.git" ]; then
          echo "Cloning $GITHUB_REPOSITORY into $GITHUB_WORKSPACE"
          git clone https://github.com/$GITHUB_REPOSITORY.git $GITHUB_WORKSPACE
        else
          echo "Already cloned $GITHUB_REPOSITORY into $GITHUB_WORKSPACE"
        fi

      shell: bash

    - uses: actions/setup-node@v3
      with:
        node-version: 16.17.1

    - name: Script Kit running ${{ inputs.script }}
      id: script-kit
      run: |

        kit_dir="$HOME/.kit"
        kit_node=$(which node | xargs dirname | xargs dirname)

        export KIT_NODE="$kit_node"        
        export KIT="$kit_dir/node_modules/@johnlindquist/kit"  

        echo "KIT_NODE: $KIT_NODE"
        echo "KIT: $KIT"

        mkdir -p $kit_dir     

        echo "Installing @johnlindquist/kit to $kit_dir"
        npm i -D --prefix $kit_dir @johnlindquist/kit

        # cat the $kit_dir package.json
        cat $kit_dir/package.json

        node --version

        export KENV="$GITHUB_WORKSPACE"

        # Write KENV to the env file
        echo "KENV=$KENV" >> $GITHUB_ENV
        echo "KIT=$KIT" >> $GITHUB_ENV
        echo "KIT_NODE=$KIT_NODE" >> $GITHUB_ENV

        # Check if package.json exists in $HOME

        # Assign $KENV_PREFIX to $HOME if $HOME/package.json doesn't exist
        # Otherwise, assign it to $KENV/scripts
        if [ ! -f "$HOME/package.json" ]; then
          export KENV_PREFIX=$HOME
        if [ ! -f "$KENV/package.json" ]; then
          export KENV_PREFIX=$KENV
        else
          export KENV_PREFIX=$KENV/scripts
        fi


        echo "Creating $KENV_PREFIX/package.json"
        npm init es6 -y --prefix $KENV_PREFIX

        echo "Linking kit dir $KIT to $KENV_PREFIX"
        npm i -D $KIT --prefix $KENV_PREFIX

        echo "Installing @actions/github to $KENV_PREFIX"
        npm i -D @actions/github --prefix $KENV_PREFIX

        echo "Installing @actions/core to $KENV_PREFIX"
        npm i -D @actions/core --prefix $KENV_PREFIX

        # if package.json doesn't exist in $KENV, create it
        if [ ! -f "$KENV/package.json" ]; then
          echo "Creating $KENV/package.json"
          npm init es6 -y --prefix $KENV
        # init package.json in $KENV/scripts if it doesn't exist
        elif [ ! -f "$KENV/scripts/package.json" ]; then
          echo "Creating $KENV/scripts/package.json"
          npm init es6 -y --prefix $KENV/scripts
        fi


        echo "🏃‍♀️ Running: ${{ inputs.script }} ${{ inputs.args }}"

        # If SCRIPTS_DIR is not set, set it to scripts
        if [ -z "$SCRIPTS_DIR" ]; then
          export SCRIPTS_DIR=scripts
          echo "SCRIPTS_DIR=$SCRIPTS_DIR" >> $GITHUB_ENV
        fi

        node $KIT/run/github-workflow.js ${{ inputs.script }} ${{ inputs.args }} --trust

      shell: bash
