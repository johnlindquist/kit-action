name: "build-test"
on: # rebuild any PRs and main branch changes
  workflow_dispatch:
    branches:
      - main
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Script Kit run log OS
        id: log-os
        uses: ./
        with:
          script: log-os
      - run: |
          Write-Output "KIT: $env:KIT"
          Write-Output "KIT_NODE: $env:KIT_NODE"
          Write-Output "KENV: $env:KENV"
          Write-Output "SCRIPTS_DIR: $env:SCRIPTS_DIR"
          Get-Content "$env:KENV/package.json"
          Get-Content "$env:KENV/scripts/package.json"

      - name: Script Kit run test-script sweet
        id: test-script-sweet
        uses: ./
        with:
          script: test-script sweet
      - run: |
          Write-Output "KIT: $env:KIT"
          Write-Output "KIT_NODE: $env:KIT_NODE"
          Write-Output "KENV: $env:KENV"
          Write-Output "SCRIPTS_DIR: $env:SCRIPTS_DIR"
          Get-Content "$env:KENV/package.json"
          Get-Content "$env:KENV/scripts/package.json"

          if (("${{ steps.test-script-sweet.outputs.result }}" -ne "sweet")) { exit 1 }
          if (("${{ steps.test-script-sweet.outputs.result }}" -eq "sweet")) { echo "Passed ðŸŽ‰" }

      - name: Script Kit test npm
        id: test-npm
        uses: ./
        with:
          script: test-npm hello
      - run: |
          if (("${{ steps.test-npm.outputs.result }}" -ne "Hello")) { exit 1 }
          if (("${{ steps.test-npm.outputs.result }}" -eq "Hello")) { echo "Passed ðŸŽ‰" }

  test-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Script Kit run log OS
        id: log-os
        uses: ./
        with:
          script: log-os
      - run: |
          Write-Output "KIT: $env:KIT"
          Write-Output "KIT_NODE: $env:KIT_NODE"
          Write-Output "KENV: $env:KENV"
          Write-Output "SCRIPTS_DIR: $env:SCRIPTS_DIR"
          Get-Content "$env:KENV/package.json"
          Get-Content "$env:KENV/scripts/package.json"

      - name: Script Kit run test-script sweet
        id: test-script-sweet
        uses: ./
        with:
          script: test-script sweet
      - run: |
          [ ${{ steps.test-script-sweet.outputs.result }} != "sweet" ] && exit 1
          [ ${{ steps.test-script-sweet.outputs.result }} = "sweet" ] && echo "Passed ðŸŽ‰"

  test-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Script Kit run log OS
        id: log-os
        uses: ./
        with:
          script: log-os
      - run: |
          Write-Output "KIT: $env:KIT"
          Write-Output "KIT_NODE: $env:KIT_NODE"
          Write-Output "KENV: $env:KENV"
          Write-Output "SCRIPTS_DIR: $env:SCRIPTS_DIR"
          Get-Content "$env:KENV/package.json"
          Get-Content "$env:KENV/scripts/package.json"

      - name: Script Kit run test-ts John
        id: test-script-ts
        uses: ./
        with:
          script: test-ts John
      - run: |
          [ ${{ steps.test-script-ts.outputs.result }} != "John" ] && exit 1
          [ ${{ steps.test-script-ts.outputs.result }} = "John" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit run test-script sweet
        id: test-script-sweet
        uses: ./
        with:
          script: test-script sweet
      - run: |
          [ ${{ steps.test-script-sweet.outputs.result }} != "sweet" ] && exit 1
          [ ${{ steps.test-script-sweet.outputs.result }} = "sweet" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit run test-kit
        id: test-kit
        uses: ./
        with:
          script: test-kit
      - run: |
          [ ${{ steps.test-kit.outputs.result }} != "success" ] && exit 1
          [ ${{ steps.test-kit.outputs.result }} = "success" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit run test-script nice
        id: test-script-nice
        uses: ./
        with:
          script: test-script nice
      - run: |
          [ ${{ steps.test-script-nice.outputs.result }} != "nice" ] && exit 1
          [ ${{ steps.test-script-nice.outputs.result }} = "nice" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit run test-args
        id: test-script-args
        uses: ./
        with:
          script: test-args John Lindquist
      - run: |
          [ "${{ steps.test-script-args.outputs.result }}" != "Lindquist John" ] && exit 1
          [ "${{ steps.test-script-args.outputs.result }}" = "Lindquist John" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit test npm
        id: test-npm
        uses: ./
        with:
          script: test-npm hello
      - run: |
          [ ${{ steps.test-npm.outputs.result }} != "Hello" ] && exit 1
          [ ${{ steps.test-npm.outputs.result }} = "Hello" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit run test get
        id: test-get
        uses: ./
        with:
          script: test-get
      - run: |
          [ ${{ steps.test-get.outputs.result }} != "@johnlindquist/kit" ] && exit 1
          [ ${{ steps.test-get.outputs.result }} = "@johnlindquist/kit" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit run test read
        id: test-read
        uses: ./
        with:
          script: test-read
      - run: |
          [ ${{ steps.test-read.outputs.result }} != "success" ] && exit 1
          [ ${{ steps.test-read.outputs.result }} = "success" ] && echo "Passed ðŸŽ‰"

      - name: Script Kit run test error
        continue-on-error: true
        id: test-error
        uses: ./
        with:
          script: test-error
